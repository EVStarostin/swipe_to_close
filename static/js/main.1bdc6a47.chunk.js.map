{"version":3,"sources":["components/NewsTray/NewsTray.jsx","App.js","serviceWorker.js","index.js"],"names":["NewsTray","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","close","setState","open","afterClose","unPinBody","document","body","style","top","classList","remove","window","scrollTo","pageScrollTop","handleTouchStart","e","tray","trayRef","current","container","containerRef","content","contentRef","state","contains","target","scrollTop","preventDefault","console","dir","requiredDiff","clientHeight","startY","touches","pageY","diffY","transition","ontouchmove","log","transform","concat","ontouchend","ontouchcancel","startDiff","onClose","React","createRef","prevProps","_this$props","children","renderHeader","with_header","react_default","a","createElement","className","ref","onTouchStart","onClick","beforeOpen","pinBody","pageYOffset","add","PureComponent","defaultProps","deviceInfo","OSFamily","Comments","type","App","handleClick","trayOpen","handleClose","_this2","components_NewsTray_NewsTray","cls","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gRAGMA,qBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA+DVQ,MAAQ,WACJP,EAAKQ,SAAS,CAAEC,MAAM,IACtBT,EAAKU,cAlEUV,EAmFnBW,UAAY,WACRC,SAASC,KAAKC,MAAMC,IAAM,GAC1BH,SAASC,KAAKG,UAAUC,OAAO,kBAC/BC,OAAOC,SAAS,EAAGnB,EAAKoB,gBAtFTpB,EAyFnBqB,iBAAmB,SAACC,GAChB,IAAMC,EAAOvB,EAAKwB,QAAQC,QACpBC,EAAY1B,EAAK2B,aAAaF,QAC9BG,EAAU5B,EAAK6B,WAAWJ,QAEhC,GAAKzB,EAAK8B,MAAMrB,KAAhB,CAIImB,EAAQG,SAAST,EAAEU,SAAiC,IAAtBJ,EAAQK,WACtCX,EAAEY,iBAKNC,QAAQC,IAAId,EAAEU,QAKd,IAAMK,EAAeX,EAAUY,aAAe,EAC1CC,EAASjB,EAAEkB,QAAQ,GAAGC,MACtBC,EAAQ,EACZnB,EAAKT,MAAM6B,WAAa,OAIxBjB,EAAUkB,YAAc,SAACtB,GAKrB,IAAMmB,EAAQnB,EAAEkB,QAAQ,GAAGC,MAC3BC,EAAQD,EAAQF,EAUhBJ,QAAQU,IAAI,QAASH,GAWjBA,GAAS,IAQbnB,EAAKT,MAAMgC,UAAX,cAAAC,OAAqCL,EAArC,SAGJhB,EAAUsB,WAAatB,EAAUuB,cAAgB,SAAC3B,GAC9CtB,EAAKkD,UAAY,EACjBxB,EAAUkB,YAAc,KACxBrB,EAAKT,MAAM6B,WAAa,GACxBpB,EAAKT,MAAMgC,UAAY,GAEnBJ,EAAQL,GACRrC,EAAKD,MAAMoD,aA9JnBnD,EAAK8B,MAAQ,CAAErB,MAAM,GAErBT,EAAKwB,QAAU4B,IAAMC,YACrBrD,EAAK6B,WAAauB,IAAMC,YACxBrD,EAAK2B,aAAeyB,IAAMC,YAC1BrD,EAAKkD,UAAY,EARFlD,mFAYXG,KAAKJ,MAAMU,MACXN,KAAKM,kDAIM6C,GACXnD,KAAKJ,MAAMU,OAAS6C,EAAU7C,OAI9BN,KAAKJ,MAAMU,KACXN,KAAKM,OAELN,KAAKI,0CAIJ,IAAAgD,EACuCpD,KAAKJ,MAAzCyD,EADHD,EACGC,SAAUC,EADbF,EACaE,aAAcN,EAD3BI,EAC2BJ,QACxB1C,EAASN,KAAK2B,MAAdrB,KAQR,OAJIgD,IAFS,CAAEhD,OAAMiD,aAAa,GAGzBA,aAAc,GAInBC,EAAAC,EAAAC,cAAA,OACIC,UAAS,aAAAf,OAAetC,EAAO,sBAAwB,wBAA9C,0BACTsD,IAAK5D,KAAKqB,SAEVmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBE,aAAc7D,KAAKkB,iBAAkB0C,IAAK5D,KAAKwB,cAChF8B,GAAgBA,EAAa,qBAC9BE,EAAAC,EAAAC,cAAA,UACIC,UAAU,mBACVG,QAASd,IAEbQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,IAAK5D,KAAK0B,YACzC2B,oCAQjBrD,KAAK+D,aACL/D,KAAKK,SAAS,CAAEC,MAAM,yCAStBN,KAAKgE,+CAILhE,KAAKQ,8CAILR,KAAKiB,cAAgBF,OAAOkD,YAC5BxD,SAASC,KAAKC,MAAMC,IAApB,GAAAgC,QAA8B5C,KAAKiB,cAAnC,MACAR,SAASC,KAAKG,UAAUqD,IAAI,yBAjFbjB,IAAMkB,gBAAvBxE,EAuKKyE,aAAe,CAClBC,WAAY,CACRC,SAAU,IAEdtB,QAAS,kBAAM,OAIRrD,cCzIf,SAAS4E,IACP,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAkBa,KAAK,UAD7C,0iPAOWC,kBA7Cb,SAAAA,EAAY7E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,KAAMJ,KAKR8E,YAAc,WACZ1C,QAAQU,IAAI,QACZ7C,EAAKQ,SAAS,CAAEsE,UAAU,KART9E,EAWnB+E,YAAc,WACZ5C,QAAQU,IAAI,SACZ7C,EAAKQ,SAAS,CAAEsE,UAAU,KAV1B9E,EAAK8B,MAAQ,CAAEgD,UAAU,GAHR9E,wEAgBV,IAAAgF,EAAA7E,KASP,OACEwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,05OAEEH,EAAAC,EAAAC,cAACoB,EAAD,CAAUxB,aAXO,SAACyB,GACpB,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAf,OAAYmC,IACxBvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeG,QAASe,EAAKH,aAA/C,UAQoC1B,QAAShD,KAAK4E,YAAatE,KAAMN,KAAK2B,MAAMgD,UAChFnB,EAAAC,EAAAC,cAACa,EAAD,eA9BQtB,IAAMkB,eCQJa,QACW,cAA7BjE,OAAOkE,SAASC,UAEe,UAA7BnE,OAAOkE,SAASC,UAEhBnE,OAAOkE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAAS7E,SAAS8E,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1bdc6a47.chunk.js","sourcesContent":["import React from 'react';\nimport './NewsTray.css';\n\nclass NewsTray extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = { open: false };\n\n        this.trayRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.containerRef = React.createRef();\n        this.startDiff = 0;\n    }\n\n    componentDidMount() {\n        if (this.props.open) {\n            this.open();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open === prevProps.open) {\n            return;\n        }\n\n        if (this.props.open) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    render() {\n        const { children, renderHeader, onClose } = this.props;\n        const { open } = this.state;\n\n        const mods = { open, with_header: false };\n\n        if (renderHeader) {\n            mods.with_header = true;\n        }\n\n        return (\n            <div\n                className={`news-tray ${open ? 'news-tray_mode_open' : 'news-tray_mode_closed'} news-tray_with_header`}\n                ref={this.trayRef}\n            >\n                <div className=\"news-tray__overlay\" />\n                <div className=\"news-tray__container\" onTouchStart={this.handleTouchStart} ref={this.containerRef}>\n                    {renderHeader && renderHeader('news-tray__header')}\n                    <button\n                        className=\"news-tray__close\"\n                        onClick={onClose}\n                    />\n                    <div className=\"news-tray__content\" ref={this.contentRef}>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    open() {\n        this.beforeOpen();\n        this.setState({ open: true });\n    }\n\n    close = () => {\n        this.setState({ open: false });\n        this.afterClose();\n    }\n\n    beforeOpen() {\n        this.pinBody();\n    }\n\n    afterClose() {\n        this.unPinBody();\n    }\n\n    pinBody() {\n        this.pageScrollTop = window.pageYOffset;\n        document.body.style.top = `${-this.pageScrollTop}px`;\n        document.body.classList.add('page_tray_open');\n    }\n\n    unPinBody = () => {\n        document.body.style.top = '';\n        document.body.classList.remove('page_tray_open');\n        window.scrollTo(0, this.pageScrollTop);\n    }\n\n    handleTouchStart = (e) => {\n        const tray = this.trayRef.current;\n        const container = this.containerRef.current;\n        const content = this.contentRef.current;\n\n        if (!this.state.open) {\n            return;\n        }\n\n        if (content.contains(e.target) && content.scrollTop === 0) {\n            e.preventDefault();\n        }\n\n        // // e.preventDefault();\n\n        console.dir(e.target);\n        // // if (content.contains(e.target) && content.scrollTop > 0) {\n        // //     return;\n        // // }\n\n        const requiredDiff = container.clientHeight / 3;\n        let startY = e.touches[0].pageY;\n        let diffY = 0;\n        tray.style.transition = 'none';\n        // // console.dir('requiredDiff', requiredDiff);\n        // // console.log('startY', startY);\n\n        container.ontouchmove = (e) => {\n            // if (content.scrollTop === 0) {\n            //     e.preventDefault();\n            //     // return;\n            // }\n            const pageY = e.touches[0].pageY;\n            diffY = pageY - startY;\n            // diffY = this.startDiff + pageY - startY;\n\n            // console.log(content.scrollTop, diffY);\n            // if (content.scrollTop <= 0 && diffY <= 0) {\n            //     e.preventDefault();\n            // }\n            \n            // startY = pageY;\n        //     // console.log('pageY', pageY);\n            console.log('diffY', diffY);\n\n            // console.log(content.scrollTop);\n            // if (content.scrollTop > 0) {\n            //     return;\n            // } else {\n            //     e.preventDefault();\n            //     return\n            // }\n\n            if (\n                diffY <= 0\n            ) {\n                return;\n            }\n        //     //     startY = pageY;\n        //     //     // return;\n        //     // }\n\n            tray.style.transform = `translateY(${diffY}px)`;\n        }\n\n        container.ontouchend = container.ontouchcancel = (e) => {\n            this.startDiff = 0;\n            container.ontouchmove = null;\n            tray.style.transition = '';\n            tray.style.transform = '';\n\n            if (diffY > requiredDiff) {\n                this.props.onClose();\n            }\n        }\n    }\n\n    static defaultProps = {\n        deviceInfo: {\n            OSFamily: ''\n        },\n        onClose: () => null\n    };\n}\n\nexport default NewsTray;","import React from 'react';\nimport NewsTray from './components/NewsTray/NewsTray';\nimport './App.css';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { trayOpen: false };\n  }\n\n  handleClick = () => {\n    console.log('open');\n    this.setState({ trayOpen: true });\n  }\n\n  handleClose = () => {\n    console.log('close');\n    this.setState({ trayOpen: false });\n  }\n\n  render() {\n    const renderHeader = (cls) => {\n      return (\n        <div className={`header ${cls}`}>\n          <button className=\"header__open\" onClick={this.handleClick}>open</button>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Neque voluptatibus itaque illum possimus, omnis voluptates dolor eos reiciendis, magni ipsam laboriosam. Fugiat eum non maxime. Dolorem odit voluptatibus, autem dolor labore sapiente alias aliquid similique excepturi ab, quia accusantium unde beatae asperiores tempore fugiat atque molestias ipsum, modi officia est ullam. Perspiciatis eius aspernatur quo sit temporibus laudantium cumque, est necessitatibus similique earum eum nemo quia culpa quas voluptate hic eaque architecto ut? Distinctio laboriosam, quis placeat rerum veritatis error nesciunt ex accusantium harum, temporibus quos nobis facere? A nihil consequuntur id nulla, eveniet exercitationem optio fugiat facilis repellendus, quis porro explicabo fugit doloremque vitae magni at officiis aliquam? Dignissimos esse quae commodi eveniet ut culpa maiores suscipit adipisci consequuntur reiciendis vero, dolorum delectus aut temporibus soluta. Eaque delectus earum consectetur soluta? Voluptatibus perspiciatis at, eligendi, est odio dicta neque iure, quae minus eveniet quam ea asperiores dolor recusandae earum! Dolor perferendis reprehenderit reiciendis nihil asperiores iusto quisquam, impedit beatae incidunt saepe qui dolore tenetur, aperiam nisi accusamus, inventore voluptatem totam explicabo modi voluptates facilis recusandae debitis adipisci. Maxime velit ipsa iusto recusandae cupiditate repellat fugit amet nulla et at harum ducimus dicta accusantium eveniet assumenda quis ipsam corporis, placeat autem pariatur temporibus ut maiores doloribus! Fuga sunt magnam deserunt error modi officia, cum ipsum distinctio eum culpa repellat laboriosam sit sint magni quisquam consequuntur nulla aut illo id dolorem inventore soluta doloribus earum. Laboriosam explicabo eos non recusandae tempora, mollitia autem sequi libero, nesciunt, labore consequuntur? Ut, modi dolor repellat molestias fuga, minus inventore corporis nulla quos nam quo itaque commodi at! Rem voluptatum distinctio in fugiat ad ducimus qui numquam neque laborum dolores laudantium impedit repellat veritatis consectetur alias quibusdam facilis recusandae voluptate nulla mollitia repudiandae dignissimos, nobis quod? Fuga saepe, est quis culpa impedit vel consequatur sequi id. Delectus, nobis deleniti modi quis, dicta non magni eligendi quia magnam illo labore asperiores id optio ut molestiae quaerat architecto possimus sequi vitae dolore blanditiis. Impedit saepe dolorem maxime recusandae, repellendus beatae provident exercitationem eos unde. Impedit, cupiditate facere. Ut odit rerum beatae nisi. Quidem maiores quas nesciunt, repellendus officiis, maxime commodi asperiores cupiditate amet fuga corrupti aperiam sit nulla itaque voluptate officia vitae reprehenderit, esse tempora ut laboriosam doloribus numquam eligendi? Rem maiores fugit similique eaque provident laborum tempora ducimus libero. Aperiam perspiciatis, nisi molestiae dicta facilis, atque libero neque placeat eaque enim et accusamus unde minus magnam. Fugit excepturi quos ea. Tempora alias autem est? Reiciendis, molestiae voluptates modi aliquid ullam temporibus accusantium quas quasi, voluptatem optio fuga esse, accusamus voluptas consequuntur velit placeat? Facilis et aperiam autem ipsam molestiae in doloremque adipisci quia possimus incidunt reprehenderit ullam quasi quam fugiat, assumenda voluptatibus natus quos ipsum modi alias. Facere sequi repellat voluptatum fuga totam optio iure labore, consequuntur placeat error quam temporibus eaque? Atque laudantium corporis eum ipsa doloribus optio inventore quam delectus suscipit harum necessitatibus dignissimos, nihil hic vitae. Eligendi atque fuga alias, eos quas ipsum. Recusandae quos enim, reiciendis facere nisi amet eligendi expedita a consequatur reprehenderit praesentium, officia odit quasi eaque. Repellendus, iste. Sunt sit possimus, nesciunt deleniti mollitia totam a labore blanditiis error magnam maiores sint atque obcaecati ipsam molestiae! Ea asperiores, tempora facilis, odio iste sequi similique consequatur, assumenda neque dolor nam nihil nostrum labore mollitia beatae quas qui praesentium maxime pariatur nulla. Doloribus, dolorum hic? Ipsum, laudantium in libero quod illo at quis blanditiis rem aliquid expedita voluptate, velit, enim magnam. Neque quas delectus iure eaque temporibus soluta cumque cum tempore qui, illo sunt veritatis labore esse at facilis ullam nostrum a earum deleniti quae dolorum minima dolores quidem? In dolorem itaque eum minus natus, deleniti nisi laborum omnis quidem saepe tempora porro eligendi? Modi esse optio ab earum mollitia eius? Ullam, aliquam? Accusantium illo doloribus vel, eius ullam consequuntur beatae dolor numquam, repudiandae deserunt ad cum at facere. Maxime quia impedit, in voluptatibus ipsum placeat? Minima nostrum facere praesentium ut distinctio voluptatum assumenda sapiente dolorem minus consequuntur nam, similique qui? Ad, necessitatibus ducimus. Dolore, debitis? Unde magnam architecto cupiditate id provident corrupti. Repellendus reprehenderit odio, sint iure tempora deleniti adipisci quia, aspernatur ad tenetur minima porro eligendi voluptates sit eos corrupti veniam. Deserunt corporis consectetur commodi neque sunt minus. Quisquam, illo. Maiores asperiores animi, ipsa fugiat sapiente obcaecati sequi velit eum nostrum nemo numquam in porro mollitia adipisci error recusandae quisquam nam! Aspernatur nam inventore libero laborum. Aliquid nostrum, illo sit sunt veritatis quibusdam sed necessitatibus non excepturi iusto asperiores ducimus voluptate, quidem praesentium accusantium rem obcaecati sapiente animi vel quam, harum labore ex! Doloribus earum eveniet similique totam maxime dolorum eius sequi a, vitae mollitia quam, optio, perspiciatis tenetur ad? Corporis dolorum quibusdam nemo a, impedit asperiores quas rem beatae esse corrupti! Recusandae velit magni repellendus aliquam odio aut unde doloribus adipisci ipsa quis, aspernatur soluta voluptatum quod dicta quo temporibus? Quo debitis sunt cupiditate deleniti perferendis nostrum velit laudantium laboriosam vel odit. Suscipit dolorem officiis repellat eaque commodi possimus vero aliquam aperiam unde? In unde ex rem pariatur necessitatibus eos tenetur eum assumenda quam dolorem, corrupti dignissimos vel rerum non vitae commodi consequatur deserunt, molestias, placeat quas? Quam, nesciunt doloremque nisi temporibus dignissimos eaque vero cum suscipit corporis nobis magni reiciendis velit debitis quis perspiciatis consequatur. Explicabo exercitationem consequuntur laboriosam culpa aperiam sed eius esse, ducimus itaque nisi assumenda, fugit minima. Pariatur, error distinctio praesentium voluptas ullam magni mollitia, omnis eius numquam sed nesciunt reprehenderit maiores quis, quos enim fuga repudiandae voluptatum architecto hic consequatur eaque at. Velit voluptas temporibus vitae, tenetur fuga accusamus voluptatem dignissimos aut reprehenderit accusantium quisquam odit modi exercitationem rerum veniam aliquid veritatis incidunt, possimus minima mollitia est repellendus sint neque labore! Quia ullam molestiae nisi eaque iure repellendus fugit vel rerum provident ratione aperiam magni, debitis adipisci, quibusdam amet omnis possimus velit delectus. Quis qui architecto, nobis impedit dolores corrupti aut, enim deserunt animi harum, repellat eaque error rem necessitatibus! Voluptatum ratione dolores labore perspiciatis commodi iste consectetur quaerat deleniti facilis accusantium, sint rem aliquid nisi nihil sapiente temporibus excepturi officiis fuga. Delectus?\n        <NewsTray renderHeader={renderHeader} onClose={this.handleClose} open={this.state.trayOpen}>\n          <Comments />\n        </NewsTray>\n      </div>\n    );\n  }\n}\n\nfunction Comments() {\n  return (\n    <div className=\"comments\">\n      <p><input className=\"comments__input\" type=\"text\"/></p>\n      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eveniet deleniti eaque quidem adipisci expedita? Doloribus quidem reprehenderit tempora alias incidunt. Voluptates quidem ex cumque odio similique accusantium dolorem magnam inventore debitis porro voluptas quod voluptatibus, ut iure ducimus repellendus omnis, harum dolor dicta minus impedit! Fugit eius veniam quasi! Quos architecto rem nobis? Placeat repudiandae accusantium mollitia laborum iste nostrum minus voluptate, assumenda expedita, veritatis tempore est ipsa dicta? Repudiandae dolore nam officia perspiciatis amet? Eos sequi accusamus voluptas, modi corrupti eaque voluptate nisi! Laboriosam quam at sit voluptatem? Labore, ipsam voluptatibus animi, aut ab sequi aspernatur earum quas a libero iure excepturi explicabo reiciendis maiores repudiandae quos rem laudantium sunt fugiat vel illo? Dolorum reiciendis magni iure nemo tempore corporis eos minus ducimus laudantium soluta quasi hic corrupti ad dolorem nostrum officia quidem aliquam quae, ipsum doloremque placeat? Unde, aut quibusdam. Sit nostrum architecto amet, molestias explicabo est soluta voluptate asperiores repudiandae dolore maiores eos inventore similique sapiente saepe quod autem quos corrupti, aperiam, eaque laborum pariatur. Obcaecati, dignissimos non explicabo laboriosam enim, alias sequi quae est odit quaerat ipsum eos ut doloremque accusantium omnis! Quis, expedita. Quisquam magnam aspernatur, maxime possimus ipsa accusamus repudiandae nostrum deserunt veniam suscipit quas. Amet officiis omnis fugiat earum quasi repellendus sit, non totam alias quidem a magni error blanditiis quas! Quas, nam recusandae sapiente accusamus soluta natus ducimus harum dignissimos quia temporibus excepturi ipsa ipsum vero ipsam commodi consectetur facere eveniet, voluptate quo neque repudiandae error aliquam. Placeat explicabo nam accusamus consequatur corrupti, cum modi nobis ipsum sint necessitatibus saepe qui itaque laudantium eum assumenda aliquid dignissimos praesentium voluptate molestias suscipit aliquam totam. Natus amet pariatur cumque illo sapiente dolor accusantium voluptates expedita quas, at dolorem voluptate quia necessitatibus cum, vitae, quos labore alias consectetur culpa aliquam totam minima laboriosam a. Totam placeat repellendus excepturi numquam voluptatum non vero quo vitae consequatur laudantium perferendis iste officiis maxime cum omnis voluptates, blanditiis nobis cumque ab quod quisquam soluta! Voluptatum officiis ullam incidunt. Autem magnam iusto illum deleniti officia. Architecto deserunt saepe facere veritatis asperiores placeat adipisci, exercitationem laudantium similique explicabo! Laboriosam vel natus voluptate molestiae tempora animi culpa cupiditate repudiandae optio veritatis facilis voluptatem distinctio minima, illum sapiente fugit neque placeat consequuntur nesciunt ducimus? Sed repellendus necessitatibus aliquid fuga modi aut, ducimus eaque unde aliquam illum architecto facilis hic, iure expedita mollitia molestias distinctio veniam voluptatibus molestiae! At dolore ea recusandae pariatur deleniti facilis excepturi praesentium. Excepturi voluptas deserunt qui commodi, maxime nesciunt optio veniam quos corporis saepe accusantium consectetur eius laboriosam repellendus explicabo! Nisi, dicta! Ipsum quasi aperiam a beatae sequi suscipit perspiciatis ducimus soluta, distinctio officiis maxime esse fugit numquam ipsam cumque qui repudiandae quos culpa reprehenderit cupiditate eum. Sunt itaque fugit modi rerum similique suscipit dolorum deserunt sint iste, voluptatum consequuntur accusantium quisquam aliquam. Libero, placeat ex similique odit sunt animi. Ratione eius at ad corporis velit iure enim non quos ex magni consequuntur, modi deserunt. Ea aliquid distinctio dolore quo. Voluptatum, magni quam odio accusantium pariatur aspernatur in sed reiciendis doloribus delectus incidunt sit, minus consequatur quisquam quas quidem mollitia dolor tempora inventore! Sequi impedit odit corrupti dolorem totam neque ratione delectus numquam excepturi debitis distinctio amet eos, non odio dignissimos optio perspiciatis aspernatur facilis architecto officia soluta cupiditate! Non officia mollitia esse alias voluptas consequatur, optio nisi accusamus sint totam reiciendis quis! Esse aliquam deserunt error provident, dicta quia doloremque magni consectetur corrupti pariatur labore. Dolorum inventore exercitationem culpa facilis consequatur qui cupiditate eius doloremque est, tenetur quaerat minima tempora repellendus recusandae dolorem vero! Vero molestiae amet commodi, eius ducimus eum nihil illum, explicabo deserunt voluptas neque fuga corrupti assumenda! Aperiam, labore reprehenderit et recusandae commodi reiciendis quis voluptatibus ea dolorum tenetur totam sint inventore, maxime voluptate quod quidem officia? Dolorum, eum sapiente non modi at fuga nihil tempora pariatur asperiores sequi quam, magni odio cum impedit! Est quasi magnam animi delectus sapiente quod mollitia harum fugit eveniet perferendis dolores nam ea quidem, blanditiis eos expedita excepturi. Molestiae error tempore repudiandae quia iste, neque in blanditiis assumenda maiores eos excepturi repellat similique incidunt cupiditate sunt impedit eius delectus ut harum dolores facere hic alias libero magnam. Minus in non odit. Dicta, minus illo. Voluptate, quis perferendis aliquid repellat tempora nesciunt! Corporis rem soluta amet quam, distinctio, doloribus doloremque, assumenda ipsam modi atque obcaecati. Obcaecati hic dolores consectetur nemo praesentium reiciendis distinctio omnis iure vitae molestiae cupiditate facilis ducimus autem, commodi dolorem quis saepe ipsa laborum atque maiores voluptates doloribus voluptate aliquam vel. Magni quas sed nam incidunt error facere, numquam nihil cum facilis deleniti qui natus debitis dignissimos dolore id blanditiis maxime, ea omnis assumenda. Libero reiciendis id in placeat quaerat. Distinctio sapiente deserunt nihil cupiditate explicabo asperiores quo eligendi ratione, numquam sequi nobis eum, expedita eos fuga vitae non accusantium provident rerum ut modi accusamus eius laboriosam! Earum minima iure enim recusandae modi accusamus at tempore sit voluptas doloribus sapiente aperiam, sed repudiandae eum nostrum voluptates harum necessitatibus corporis? Ipsa nulla, odio qui voluptatibus necessitatibus vero neque aspernatur dolore natus accusantium omnis! Numquam in assumenda placeat odit voluptatibus quaerat temporibus vel suscipit illo dolore optio, quasi ad impedit excepturi asperiores tempora enim blanditiis laborum praesentium dolorum aspernatur reprehenderit natus vitae iure. Quis explicabo distinctio sequi eius corrupti, facilis dolor minus hic eveniet, a sapiente rem ex repellat recusandae voluptatum id? Animi illo repellendus quasi veritatis itaque vero, fuga officia reiciendis quas magni dolorum sint natus expedita ullam. Labore mollitia, tempore ipsum voluptatem nisi aliquid voluptas fugiat quaerat itaque possimus ullam voluptatibus inventore, nesciunt officia nihil, obcaecati autem aut ducimus ratione sit illum vitae porro explicabo fuga. Exercitationem itaque ex soluta numquam nihil. Ullam, temporibus molestiae qui fugit tempore possimus voluptas doloribus voluptatum quasi atque nostrum eligendi labore aspernatur dolores voluptate iure molestias! Sed optio assumenda hic nisi voluptate cum, ducimus molestias accusantium corporis ab saepe perspiciatis. Accusantium, molestias nulla, praesentium excepturi saepe ratione architecto nostrum eveniet quos voluptatibus nisi pariatur fugiat natus esse numquam. Necessitatibus placeat molestiae error incidunt! Architecto exercitationem, delectus provident temporibus autem corrupti animi.\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}